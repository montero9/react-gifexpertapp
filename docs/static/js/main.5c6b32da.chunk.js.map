{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBI,OACA,mCACI,sBAAMC,SAZO,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC7CN,EAAc,MAOd,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SApBW,SAACP,GACxBF,EAAcE,EAAEQ,OAAOF,e,+BCNlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEqCC,UAAUH,GAF/C,+DAGKI,MAAMF,GAHX,cAGbG,EAHa,gBAIEA,EAAUC,OAJZ,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACCC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAV3B,kBAcZM,GAdY,4CAAH,sDCAPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IACpC,OACI,sBAAKc,UAAU,2DAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,kCAAKA,EAAL,WCFCO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEtB,ECHwB,SAAEA,GAE1B,MAA0Bd,mBAAU,CAChCqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAXAC,qBAAW,WACPxB,EAAQC,GACPwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGlB,CAAEpB,IAGEqB,EDfwBK,CAAc1B,GAAjCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAGpB,OACI,qCACI,mCAAMpB,EAAN,OACCoB,GAAW,WAEZ,qBAAKJ,UAAU,YAAf,SAEgBH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAA+BA,GAAbA,EAAIC,aEbzCgB,EAAe,WAQxB,MAAoCzC,mBAAS,CAAC,cAA9C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAMA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEIS,EAAWe,KAAK,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,YCrBnC4B,IAASC,OACH,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5c6b32da.chunk.js","sourcesContent":["import React, {useState}  from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handelInmputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategories( categories => [inputValue, ...categories,] );\r\n            setInputValue('');\r\n        }\r\n        \r\n    }\r\n\r\n        return (\r\n        <>\r\n            <form onSubmit={ handleSubmit }>\r\n                <input \r\n                    type=\"text\" \r\n                    value={inputValue}\r\n                    onChange={ handelInmputChange }\r\n                />\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n};\r\n","\r\n\r\nexport const getGifs = async (category) => {\r\n\r\n    const url =  `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=wxEtE6HoeBeD8dXKf7G1xw4xCXU3OSlG`;\r\n    const respuesta = await fetch(url);\r\n    const {data} = await respuesta.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return { \r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n        }        \r\n    })\r\n\r\n    return gifs\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce animate__delay-2s\" >\r\n            <img src={url} alt={title} />\r\n            <p> {title} </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ( {category} ) => {\r\n   \r\n    const {data:images, loading} = useFetchGifs( category );\r\n\r\n    \r\n    return (\r\n        <>\r\n            <h3> {category} </h3>\r\n            {loading && 'Cargando'}\r\n            \r\n            <div className=\"card-grid\">          \r\n                        {\r\n                            images.map( img  => (\r\n                                <GifGridItem key={img.id} { ...img } />\r\n                            ))\r\n                        }\r\n                \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState ({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs(category)\r\n        .then( imgs => {\r\n            setState({\r\n                data: imgs,\r\n                loading: false\r\n            })\r\n        });\r\n    }, [ category ]);\r\n\r\n\r\n    return state;\r\n}","import React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    /* const categories = [\r\n        'One Punch',\r\n        'Samurai X',\r\n        'Dragon Ball'\r\n    ] */\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    /* const handleAdd = () => {\r\n        setCategories(categories => [...categories,'Goku']);\r\n    } */\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr/>\r\n\r\n            <ol>\r\n           {\r\n                categories.map( category => \r\n                     <GifGrid key={category} category={category} /> )\r\n            }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {GifExpertApp} from '../src/GifExpertApp';\n\n\nReactDOM.render(\n      <GifExpertApp />,\n      document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}